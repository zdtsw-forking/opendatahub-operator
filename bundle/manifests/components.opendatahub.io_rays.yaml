apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  creationTimestamp: null
  name: rays.components.opendatahub.io
spec:
  group: components.opendatahub.io
  names:
    kind: Ray
    listKind: RayList
    plural: rays
    singular: ray
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Status
      jsonPath: .status.phase
      name: Status
      type: string
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Ready
      jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - description: Reason
      jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Reason
      type: string
    - description: Message
      jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Message
      priority: 1
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              componentName:
                type: string
              componentdevflags:
                properties:
                  LoggerMode:
                    type: string
                  dscdevflags:
                    description: |-
                      DevFlags defines list of fields that can be used by developers to test customizations. This is not recommended
                      to be used in production environment.
                    properties:
                      manifests:
                        description: List of custom manifests for the given component
                        items:
                          properties:
                            contextDir:
                              default: manifests
                              description: contextDir is the relative path to the
                                folder containing manifests in a repository, default
                                value "manifests"
                              type: string
                            sourcePath:
                              default: ""
                              description: 'sourcePath is the subpath within contextDir
                                where kustomize builds start. Examples include any
                                sub-folder or path: `base`, `overlays/dev`, `default`,
                                `odh` etc.'
                              type: string
                            uri:
                              default: ""
                              description: uri is the URI point to a git repo with
                                tag/branch. e.g.  https://github.com/org/repo/tarball/<tag/branch>
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              dscinitializationspec:
                description: DSCISpec defines the desired state of DSCInitialization.
                properties:
                  applicationsNamespace:
                    default: opendatahub
                    description: Namespace for applications to be installed, non-configurable,
                      default to "opendatahub"
                    type: string
                    x-kubernetes-validations:
                    - message: ApplicationsNamespace is immutable
                      rule: self == oldSelf
                  devFlags:
                    description: |-
                      Internal development useful field to test customizations.
                      This is not recommended to be used in production environment.
                    properties:
                      logmode:
                        default: production
                        enum:
                        - devel
                        - development
                        - prod
                        - production
                        type: string
                      manifestsUri:
                        description: Custom manifests uri for odh-manifests
                        type: string
                    type: object
                  monitoring:
                    description: Enable monitoring on specified namespace
                    properties:
                      managementState:
                        description: |-
                          Set to one of the following values:
                          - "Managed" : the operator is actively managing the component and trying to keep it active.
                                        It will only upgrade the component if it is safe to do so.
                          - "Removed" : the operator is actively managing the component and will not install it,
                                        or if it is installed, the operator will try to remove it.
                        enum:
                        - Managed
                        - Removed
                        pattern: ^(Managed|Unmanaged|Force|Removed)$
                        type: string
                      namespace:
                        default: opendatahub
                        description: Namespace for monitoring if it is enabled
                        type: string
                    type: object
                  serviceMesh:
                    description: |-
                      Configures Service Mesh as networking layer for Data Science Clusters components.
                      The Service Mesh is a mandatory prerequisite for single model serving (KServe) and
                      you should review this configuration if you are planning to use KServe.
                      For other components, it enhances user experience; e.g. it provides unified
                      authentication giving a Single Sign On experience.
                    properties:
                      auth:
                        description: |-
                          Auth holds configuration of authentication and authorization services
                          used by Service Mesh in Opendatahub.
                        properties:
                          audiences:
                            default:
                            - https://kubernetes.default.svc
                            description: |-
                              Audiences is a list of the identifiers that the resource server presented
                              with the token identifies as. Audience-aware token authenticators will verify
                              that the token was intended for at least one of the audiences in this list.
                              If no audiences are provided, the audience will default to the audience of the
                              Kubernetes apiserver (kubernetes.default.svc).
                            items:
                              type: string
                            type: array
                          namespace:
                            description: |-
                              Namespace where it is deployed. If not provided, the default is to
                              use '-auth-provider' suffix on the ApplicationsNamespace of the DSCI.
                            maxLength: 63
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?)?$
                            type: string
                        type: object
                      controlPlane:
                        description: ControlPlane holds configuration of Service Mesh
                          used by Opendatahub.
                        properties:
                          metricsCollection:
                            default: Istio
                            description: |-
                              MetricsCollection specifies if metrics from components on the Mesh namespace
                              should be collected. Setting the value to "Istio" will collect metrics from the
                              control plane and any proxies on the Mesh namespace (like gateway pods). Setting
                              to "None" will disable metrics collection.
                            enum:
                            - Istio
                            - None
                            type: string
                          name:
                            default: data-science-smcp
                            description: Name is a name Service Mesh Control Plane.
                              Defaults to "data-science-smcp".
                            type: string
                          namespace:
                            default: istio-system
                            description: Namespace is a namespace where Service Mesh
                              is deployed. Defaults to "istio-system".
                            maxLength: 63
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?)?$
                            type: string
                        type: object
                      managementState:
                        default: Removed
                        enum:
                        - Managed
                        - Unmanaged
                        - Removed
                        pattern: ^(Managed|Unmanaged|Force|Removed)$
                        type: string
                    type: object
                  trustedCABundle:
                    description: |-
                      When set to `Managed`, adds odh-trusted-ca-bundle Configmap to all namespaces that includes
                      cluster-wide Trusted CA Bundle in .data["ca-bundle.crt"].
                      Additionally, this fields allows admins to add custom CA bundles to the configmap using the .CustomCABundle field.
                    properties:
                      customCABundle:
                        default: ""
                        description: |-
                          A custom CA bundle that will be available for  all  components in the
                          Data Science Cluster(DSC). This bundle will be stored in odh-trusted-ca-bundle
                          ConfigMap .data.odh-ca-bundle.crt .
                        type: string
                      managementState:
                        default: Removed
                        description: managementState indicates whether and how the
                          operator should manage customized CA bundle
                        enum:
                        - Managed
                        - Removed
                        - Unmanaged
                        pattern: ^(Managed|Unmanaged|Force|Removed)$
                        type: string
                    required:
                    - customCABundle
                    - managementState
                    type: object
                required:
                - applicationsNamespace
                type: object
              platform:
                type: string
            type: object
          status:
            description: RayComponentStatus defines the custom status.
            properties:
              conditions:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
