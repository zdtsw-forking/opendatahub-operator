apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  creationTimestamp: null
  name: kserves.components.opendatahub.io
spec:
  group: components.opendatahub.io
  names:
    kind: Kserve
    listKind: KserveList
    plural: kserves
    singular: kserve
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Status
      jsonPath: .status.phase
      name: Status
      type: string
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Ready
      jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - description: Reason
      jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Reason
      type: string
    - description: Message
      jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Message
      priority: 1
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              applicationsNamespace:
                type: string
              componentName:
                type: string
              componentdevflags:
                properties:
                  LoggerMode:
                    type: string
                  dscdevflags:
                    description: |-
                      DevFlags defines list of fields that can be used by developers to test customizations. This is not recommended
                      to be used in production environment.
                    properties:
                      manifests:
                        description: List of custom manifests for the given component
                        items:
                          properties:
                            contextDir:
                              default: manifests
                              description: contextDir is the relative path to the
                                folder containing manifests in a repository, default
                                value "manifests"
                              type: string
                            sourcePath:
                              default: ""
                              description: 'sourcePath is the subpath within contextDir
                                where kustomize builds start. Examples include any
                                sub-folder or path: `base`, `overlays/dev`, `default`,
                                `odh` etc.'
                              type: string
                            uri:
                              default: ""
                              description: uri is the URI point to a git repo with
                                tag/branch. e.g.  https://github.com/org/repo/tarball/<tag/branch>
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              defaultDeploymentMode:
                description: |-
                  Configures the default deployment mode for Kserve. This can be set to 'Serverless' or 'RawDeployment'.
                  The value specified in this field will be used to set the default deployment mode in the 'inferenceservice-config' configmap for Kserve.
                  This field is optional. If no default deployment mode is specified, Kserve will use Serverless mode.
                enum:
                - Serverless
                - RawDeployment
                pattern: ^(Serverless|RawDeployment)$
                type: string
              monitoring:
                properties:
                  managementState:
                    description: |-
                      Set to one of the following values:
                      - "Managed" : the operator is actively managing the component and trying to keep it active.
                                    It will only upgrade the component if it is safe to do so.
                      - "Removed" : the operator is actively managing the component and will not install it,
                                    or if it is installed, the operator will try to remove it.
                    enum:
                    - Managed
                    - Removed
                    pattern: ^(Managed|Unmanaged|Force|Removed)$
                    type: string
                  namespace:
                    default: opendatahub
                    description: Namespace for monitoring if it is enabled
                    type: string
                type: object
              platform:
                type: string
              serviceMesh:
                description: ServiceMeshSpec configures Service Mesh.
                properties:
                  auth:
                    description: |-
                      Auth holds configuration of authentication and authorization services
                      used by Service Mesh in Opendatahub.
                    properties:
                      audiences:
                        default:
                        - https://kubernetes.default.svc
                        description: |-
                          Audiences is a list of the identifiers that the resource server presented
                          with the token identifies as. Audience-aware token authenticators will verify
                          that the token was intended for at least one of the audiences in this list.
                          If no audiences are provided, the audience will default to the audience of the
                          Kubernetes apiserver (kubernetes.default.svc).
                        items:
                          type: string
                        type: array
                      namespace:
                        description: |-
                          Namespace where it is deployed. If not provided, the default is to
                          use '-auth-provider' suffix on the ApplicationsNamespace of the DSCI.
                        maxLength: 63
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?)?$
                        type: string
                    type: object
                  controlPlane:
                    description: ControlPlane holds configuration of Service Mesh
                      used by Opendatahub.
                    properties:
                      metricsCollection:
                        default: Istio
                        description: |-
                          MetricsCollection specifies if metrics from components on the Mesh namespace
                          should be collected. Setting the value to "Istio" will collect metrics from the
                          control plane and any proxies on the Mesh namespace (like gateway pods). Setting
                          to "None" will disable metrics collection.
                        enum:
                        - Istio
                        - None
                        type: string
                      name:
                        default: data-science-smcp
                        description: Name is a name Service Mesh Control Plane. Defaults
                          to "data-science-smcp".
                        type: string
                      namespace:
                        default: istio-system
                        description: Namespace is a namespace where Service Mesh is
                          deployed. Defaults to "istio-system".
                        maxLength: 63
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?)?$
                        type: string
                    type: object
                  managementState:
                    default: Removed
                    enum:
                    - Managed
                    - Unmanaged
                    - Removed
                    pattern: ^(Managed|Unmanaged|Force|Removed)$
                    type: string
                type: object
              serving:
                description: |-
                  Serving configures the KNative-Serving stack used for model serving. A Service
                  Mesh (Istio) is prerequisite, since it is used as networking layer.
                properties:
                  ingressGateway:
                    description: |-
                      IngressGateway allows to customize some parameters for the Istio Ingress Gateway
                      that is bound to KNative-Serving.
                    properties:
                      certificate:
                        description: |-
                          Certificate specifies configuration of the TLS certificate securing communication
                          for the gateway.
                        properties:
                          secretName:
                            description: |-
                              SecretName specifies the name of the Kubernetes Secret resource that contains a
                              TLS certificate secure HTTP communications for the KNative network.
                            type: string
                          type:
                            default: OpenshiftDefaultIngress
                            description: |-
                              Type specifies if the TLS certificate should be generated automatically, or if the certificate
                              is provided by the user. Allowed values are:
                              * SelfSigned: A certificate is going to be generated using an own private key.
                              * Provided: Pre-existence of the TLS Secret (see SecretName) with a valid certificate is assumed.
                              * OpenshiftDefaultIngress: Default ingress certificate configured for OpenShift
                            enum:
                            - SelfSigned
                            - Provided
                            - OpenshiftDefaultIngress
                            type: string
                        type: object
                      domain:
                        description: |-
                          Domain specifies the host name for intercepting incoming requests.
                          Most likely, you will want to use a wildcard name, like *.example.com.
                          If not set, the domain of the OpenShift Ingress is used.
                          If you choose to generate a certificate, this is the domain used for the certificate request.
                        type: string
                    type: object
                  managementState:
                    default: Managed
                    enum:
                    - Managed
                    - Unmanaged
                    - Removed
                    pattern: ^(Managed|Unmanaged|Force|Removed)$
                    type: string
                  name:
                    default: knative-serving
                    description: |-
                      Name specifies the name of the KNativeServing resource that is going to be
                      created to instruct the KNative Operator to deploy KNative serving components.
                      This resource is created in the "knative-serving" namespace.
                    type: string
                type: object
            type: object
          status:
            description: KserveComponentStatus defines the custom status.
            properties:
              conditions:
                items:
                  description: |-
                    Condition represents the state of the operator's
                    reconciliation functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
